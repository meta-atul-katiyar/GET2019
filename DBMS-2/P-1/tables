
CREATE SCHEMA `StoreFront` ;



CREATE  TABLE `storefront`.`products` (

  `idproducts` INT(11) NOT NULL ,

  `idbrands` INT(11) NOT NULL ,

  `productDescription` VARCHAR(45) NOT NULL ,

  `idcategory` INT(11) NOT NULL ,

  `unitPrice` DOUBLE NOT NULL ,

  `quantity` INT(11) NOT NULL ,

  PRIMARY KEY (`idproducts`) ,
  
  FOREIGN KEY(`idcategory` ) REFERENCES category(`idcategory` )
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  
  FOREIGN KEY(`idbrands`) REFERENCES brands(idbrands)
  ON DELETE CASCADE
  ON UPDATE CASCADE,

  INDEX `idbrands` (`idbrands` ASC) ,

  INDEX `idcategory` (`idcategory` ASC) );





//
CREATE  TABLE `storefront`.`category` (

  `idcategory` INT NOT NULL ,

  `categoryName` VARCHAR(100) NOT NULL ,

  `parentCategoryId` INT NULL ,

  PRIMARY KEY (`idcategory`) ,

  UNIQUE INDEX `idcategory_UNIQUE` (`idcategory` ASC) ,

  UNIQUE INDEX `categoryName_UNIQUE` (`categoryName` ASC) );



//userRole
CREATE  TABLE `storefront`.`user_role` (

  `iduser_role` INT NOT NULL ,

  `roleName` VARCHAR(45) NOT NULL ,

  PRIMARY KEY (`iduser_role`) );


//user
CREATE  TABLE `storefront`.`user` (

  `iduser` INT UNSIGNED NOT NULL ,

  `userName` VARCHAR(45) NOT NULL ,

  `mobileNumber` DECIMAL(10) NOT NULL ,

  `emailId` VARCHAR(100) NOT NULL ,

  `iduserrole` INT NOT NULL  ,

  PRIMARY KEY (`iduser`) ,
  
  FOREIGN KEY(`iduserrole` ) REFERENCES userrole(iduserrole)
  ON DELETE CASCADE
  ON UPDATE CASCADE,

  UNIQUE INDEX `iduser_UNIQUE` (`iduser` ASC) ,

  UNIQUE INDEX `userName_UNIQUE` (`userName` ASC) ,

  UNIQUE INDEX `mobileNumber_UNIQUE` (`mobileNumber` ASC) ,

  UNIQUE INDEX `emailId_UNIQUE` (`emailId` ASC) );


//
CREATE  TABLE `storefront`.`userrole` (

  `iduserrole` INT NOT NULL ,

  `roleName` VARCHAR(45) NOT NULL ,

  PRIMARY KEY (`iduserrole`) ,

  UNIQUE INDEX `roleName_UNIQUE` (`roleName` ASC) ,

  UNIQUE INDEX `iduserrole_UNIQUE` (`iduserrole` ASC) );


//
CREATE  TABLE `storefront`.`shippingAddress` (

  `idshippingAddress` INT NOT NULL ,

  `houseNumber` INT NOT NULL ,

  `streetName` VARCHAR(45) NULL ,

  `landMark` VARCHAR(45) NULL ,

  `city` VARCHAR(45) NOT NULL ,

  `state` VARCHAR(45) NOT NULL ,

  `country` VARCHAR(45) NOT NULL ,

  `zip` DECIMAL(6) NOT NULL ,

  PRIMARY KEY (`idshippingAddress`) );



//
CREATE  TABLE `storefront`.`brands` (

  `idbrands` INT NOT NULL ,

  `brandName` VARCHAR(100) NOT NULL ,

  PRIMARY KEY (`idbrands`) );



//
CREATE  TABLE `storefront`.`shopperAddress` (

  `idshopperAddress` INT(11) NOT NULL ,

  `iduser` INT(11) NOT NULL ,

  `idshippingAddress` INT(11) NOT NULL ,

  PRIMARY KEY (`idshopperAddress`) ,
  
  FOREIGN KEY(`iduser` ) REFERENCES user(iduser)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  
  FOREIGN KEY(`idshippingAddress` ) REFERENCES shippingAddress(shippingAddress)
  ON DELETE CASCADE
  ON UPDATE CASCADE,

  INDEX `idshippingAddress` (`idshippingAddress` ASC) ,

  INDEX `iduser` (`iduser` ASC) );


//
CREATE  TABLE `storefront`.`shopperOrders` (

  `idshopperOrders` INT NOT NULL ,

  `timestamp` DATETIME NULL ,

  `totalamount` DOUBLE NULL ,

  `idshippingAddress` INT(11) NULL REFERENCES shippingAddress(shippingAddress),

  `status` VARCHAR(20) NULL ,

  PRIMARY KEY (`idshopperOrders`) ,
  
  FOREIGN KEY(`idshippingAddress` ) REFERENCES shippingAddress(shippingAddress)
  ON DELETE CASCADE
  ON UPDATE CASCADE,

  INDEX `idshippingAddress` (`idshippingAddress` ASC) );


//
CREATE  TABLE `storefront`.`orderDetail` (

  `idorderDetail` INT(11) NOT NULL ,

  `idshopperorders` INT(11) NOT NULL ,

  `idproducts` INT(11) NOT NULL ,

  `quantity` INT NOT NULL ,

  `unirPrice` DOUBLE NOT NULL ,

  PRIMARY KEY (`idorderDetail`) ,

  UNIQUE INDEX `idorderDetail_UNIQUE` (`idorderDetail` ASC) ,
  
  FOREIGN KEY(`idshopperorders` ) REFERENCES shopperOrders(idshopperOrders)
  ON DELETE CASCADE
  ON UPDATE CASCADE,

  FOREIGN KEY(`idproducts` ) REFERENCES products(idproducts)
  ON DELETE CASCADE
  ON UPDATE CASCADE,

  INDEX `idshopperorders` (`idshopperorders` ASC) ,

  INDEX `idproducts` (`idproducts` ASC) );


//
SET FOREIGN_KEY_CHECKS=0; DROP TABLE products; SET FOREIGN_KEY_CHECKS=1;


//
CREATE  TABLE `storefront`.`producIimages` (

  `idproductImages` INT(11) NOT NULL ,

  `imageName` VARCHAR(45) NULL ,

  `idproducts` INT(11) NULL REFERENCES products(idproducts),

  PRIMARY KEY (`idproductImages`) ,
  
  FOREIGN KEY(`idproducts` ) REFERENCES products(idproducts)
  ON DELETE CASCADE
  ON UPDATE CASCADE,

  INDEX `idproducts` (`idproducts` ASC) );



//
